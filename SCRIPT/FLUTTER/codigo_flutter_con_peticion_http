//main
import 'package:evidencia_31_10/home.dart';
import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'My App',
      home: Scaffold(
          appBar: AppBar(
            title: Text('ACTIVIDAD FLUTTER_HTTP'),
          ),
          body: Home()),
    );
  }
}

//user
import 'dart:convert' as convert;

class User {
  int? id;
  String? email, firstName, avatar, support, text;

  User(String data) {
    Map json = convert.jsonDecode(data);
    id = json["data"]["id"];
    email = json["data"]["email"];
    firstName = json["data"]["first_name"];
    avatar = json["data"]["avatar"];
    support = json["data"]["support"];
    text = json["data"]["text"];

  }
}

//home

import 'package:flutter/material.dart';
import 'package:evidencia_31_10/user.dart';
import 'package:http/http.dart' as http;

class Home extends StatelessWidget {
  const Home({
    Key? key,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return FutureBuilder<User>(
      future: getUser(),
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.done) {
          User user = snapshot.data!;
          return Datos(user: user);
        } else {
          return Center(child: CircularProgressIndicator());
        }
      },
    );
  }

  Future<User> getUser() async {
    final url = Uri.https('reqres.in', '/api/users/3');
    final respuesta = await http.get(url);
    if (respuesta.statusCode == 200) {
      User user = User(respuesta.body);
      return user;
    } else {
      return User("daaa");
    }
  }
}

class Datos extends StatelessWidget {
  const Datos({
    Key? key,
    required this.user,
  }) : super(key: key);

  final User user;

  @override
  Widget build(BuildContext context) {
    return Center(
      child: Column(
        children: [
          SizedBox(height: 10.0),
          Text(
            user.firstName!,
            style: TextStyle(
                fontSize: 30.0,
                fontWeight: FontWeight.w900,
                fontStyle: FontStyle.italic,
                color: Colors.black87),
          ),
          SizedBox(height: 15.0),
          Image.network(user.avatar!, width: 150.0),
          SizedBox(height: 15.0),
          Row(
              //ainAxisAlignment: MainAxisAlignment.end,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                SizedBox(width: 15.0),
                Text(
                  'CORREO: ',
                  style: TextStyle(
                      fontSize: 17.0,
                      color: Colors.black87,
                      fontWeight: FontWeight.w500),
                ),
                Text(
                  user.email!,
                  style: TextStyle(
                      fontStyle: FontStyle.italic,
                      fontSize: 17.0,
                      color: Color.fromARGB(255, 0, 93, 136)),
                )
              ]),
          //SizedBox(height: 15.0),
          //Text(user.support!)
        ],
      ),
    );
  }
}
